usa-se o nodemoon para que o servidor reinicie toda vez que eu alterar o codigo

usa-se o comando npm run dev para fazer com que nodemoon seja executado.


quando eu quero que o node execute um script eu posso usar npm start, caso o script que eu quero 
esteja no atributo start, ou npm run [nome do atributo] para os demais scripts.

_______________________________________________________________________________________________________________

// router params parametros da rota, quando usados, e obrigatorio que coloque um parametro para acesso a rota.
app.get("/message/:id/:user",(request,response)=>{
    
    const {id,user} = request.params;
    
    response.send(`
    ID da mensagem ${id}
    Para o usuario: ${user}
    `)
})
_________________________________________________________________________________________________________________
parametros por consulta 

app.get("/user",(request,response)=> {

    const {name,id} = request.query;

    response.send(`seu nome e : ${name}, id: ${id}`)


})



// Index -GET metodo para listar varios registros. 
// show - get para exibir um registro especifico
// create- criar um registro (metodo post )
// update - PUT     para atualizar o registro
// delete - delete para  remover um registro

// controllers e a parte responsavel por processar uma requisicao a api.



_______________________________________________________________________________________________________________
response.send  // usado para enviar uma mensagem como resposta a uma requisicao

response.json() // usado para enviar um json como resposta a uma requisicao.
request.body // atributo, onde mostra a mensagem que e enviada como argumento na requisicao.
_________________________________________________________________________________________________________________

// o metodo app.use() e um metodo que recebe funcoes que vao ser executadas todas as vezes que o servidor receber uma requisicao
// funcoes de middleware sao funcoes que sao executadas antes que uma resposta de uma requisicao sejam enviadas.
// e possivel colocar metodos em funcoes, como se fossem objetos.

//Embora a instrução require('express') retorne um objeto, ela também possui 
//uma propriedade padrão app que é uma função. Essa função de aplicativo pode ser chamada 
//diretamente para criar uma nova instância do aplicativo Express.

// a melhor forma de ver express , e como um modulo que possui  funcoes e objetos dentro dele. quando eu chamo express(); e retornado um objeto que representa a aplicacao express


HTTP CODES
_______________________________________________________________________________________________________________
Adiciona uma numeracao na resposta, que representa um estado da resposta.

100 = informativo - solicitacao aceita

200 = requisicao bem sucedida

300 = redirecionamento -  movido ou movido permanentemente.

400 = erro do cliente - 404 - not found
401-unauthorized

500 - erro no servidor 


a palavra chave --save usado na instalacao de pacotes e usado paara dizer que o pacote de instalacao que eu estou instalando vai ser necessario para o produto final.


modulos utilizados ate o momento: nodemoon, bcryptjs, sqlite, sqlite3 e modulos node.



// middlaware sao funcoes que possuem acesso ao objeto request e reponse, e next. onde o middleware tem acesso a requisicao antes 
// da requisicao chegar no seu destino final, ele e quem define se a requisicao vai ter permissao de ir ao seu destino final ou nao.


// O método POST é frequentemente usado em APIs para criar um novo registro no servidor. 
// O método POST é uma operação de criação e é usado para enviar dados do cliente para o servidor para criar um novo recurso.


// Migrations e uma tecnica, usada para executar intrucoes sql, sem o uso do sgbd, executar instrucoes diretamente no arquivo js.
// usando o knex.js
//  As migrations consistem em instruções SQL 
// que são registradas em arquivos e executadas pelo sistema de migração para atualizar o esquema do banco de dados. 

______________________________________________________________________________________________________________________

banco de dados = 

// metodo exec e usado para retornar varias registros na consulta, ja  o metodo get retorna um unico registro da consulta.
// metodo exec usado para executar comandos sql que retornar dados, ja o metodo run e 
// usado para executar comandos sql que nao retornam dados
+_________________________________________________________________________________________________________________________


// Inner Join e uma forma de voce fazer uma consulta a dois banco de dados e retornar as duas consultas de forma unificada.
// metodo post e para criar algo.
